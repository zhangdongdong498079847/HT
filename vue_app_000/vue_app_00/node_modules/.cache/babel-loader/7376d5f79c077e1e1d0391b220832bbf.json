{"remainingRequest":"C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1567413306487},{"path":"C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\手册\\web专用文件\\前端毕业作品，别删除\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    //当前组件创建成功回调函数\n    this.loadMore();\n  },\n  methods: {\n    selectAll: function selectAll(event) {\n      //获取当前按钮状态 true\n      var cb = event.target.checked; //创建循环遍历所有商品属性cb值\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    deleteitems: function deleteitems() {\n      var _this = this;\n\n      //显示确认对话框\n      this.$messagebox.confirm(\"是否删除数据\").then(function (res) {\n        //创建变量保存选中id值\n        var id = \"\";\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            if (item.cb) {\n              //判断元素属性cb是否等于true\n              id += item.id + \",\"; //拼接id\n            }\n          } //console.log(id);\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        id = id.slice(0, -1);\n\n        if (id == \"\") {\n          _this.$toast(\"请选择需要删除的物品\");\n\n          return;\n        } //创建rul 创建obj 发送ajax请求\n\n\n        var url = \"delitems\";\n        var obj = {\n          id: id\n        };\n\n        _this.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          //获取服务器返回数据\n          //  判断删除多个商品是否成功\n          if (res.data.code == -1) {\n            _this.$toast(\"删除失败\");\n          } else {\n            _this.$toast(\"删除成功\");\n\n            _this.loadMore();\n          }\n        });\n      });\n    },\n    deleteitem: function deleteitem(event) {\n      var _this2 = this;\n\n      //功能:用户点击删除按钮完成删除指定商品任务\n      //(1)为按钮绑定点击事件调用deleteItem \n      //(2)显示确认框如果用户选 确定\n      this.$messagebox.confirm(\"是否删除指定数据\").then(function (res) {\n        //(3)将当前商品id传递函数\n        var id = event.target.dataset.id;\n        console.log(id); //(4)发送ajax请示完成删除任务\n\n        var url = \"delitem\";\n        var obj = {\n          id: id\n        };\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          if (res.data.code = 1) {\n            _this2.$toast(\"删除成功\");\n\n            _this2.loadMore(); //刷新\n\n          } else {\n            _this2.$toast(\"删除失败\");\n          }\n        }); //\n        //(5)删除成功 提示\"删除成功\"\n\n      }).catch(function (err) {});\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      var url = \"carts\"; //获取当前用户购物车列表\n      //创建url请求服务器地址\n      //发送ajax请求\n\n      this.axios.get(url).then(function (res) {\n        if (res.data.code == -1) {\n          _this3.$messagebox(\"消息\", \"请登录\").then(function (res) {\n            _this3.$router.push(\"/login\");\n          });\n        } else {\n          //获取服务器返回数据\n          //this.list=res.data.data;\n          var rows = res.data.data;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = rows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n              item.cb = true;\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          _this3.list = rows;\n        }\n      }); //获取服务器返回数据\n      //如果服务器返回 请登录\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n   <div class=\"cart\">\r\n   <h3>购物车的</h3>\r\n   <div class=\"selectall\" @click=\"selectAll\">\r\n    全选<input type=\"checkbox\">\r\n   </div>\r\n   \r\n   <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">\r\n     <div class=\"lefttext\">\r\n     <input type=\"checkbox\" v-model=\"item.cb\">\r\n     <div class=\"lname\">{{item.lname}}</div>\r\n     <div class=\"price\">{{item.price}}</div>\r\n     </div>\r\n       <mt-button @click=\"deleteitem\" :data-id=\"item.id\">删除</mt-button>\r\n   </div>\r\n     <div>\r\n      <span style=\"color:red\">0</span>\r\n      <mt-button @click=\"deleteitems\">删除选中的商品</mt-button>\r\n      <mt-button>清空购物车</mt-button>\r\n     </div>\r\n   </div> \r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n      return{\r\n          list:[],\r\n      }\r\n    },\r\n     created(){\r\n         //当前组件创建成功回调函数\r\n         this.loadMore();\r\n     },\r\n          \r\n     methods:{\r\n          selectAll(event){\r\n               //获取当前按钮状态 true\r\n                var cb=event.target.checked; \r\n                //创建循环遍历所有商品属性cb值\r\n                for(var item of this.list){\r\n                    item.cb=cb;                 \r\n                }                                \r\n           },\r\n         deleteitems(){\r\n            //显示确认对话框\r\n              this.$messagebox.confirm(\"是否删除数据\").then(res=>{\r\n                 //创建变量保存选中id值\r\n                  var id=\"\";\r\n                  for(var item of this.list){\r\n                      if(item.cb){//判断元素属性cb是否等于true\r\n                        id+=item.id+\",\";//拼接id\r\n                      }\r\n                  }//console.log(id);\r\n                  id=id.slice(0,-1);\r\n                  if(id==\"\"){\r\n                      this.$toast(\"请选择需要删除的物品\");\r\n                      return;\r\n                  }\r\n                  //创建rul 创建obj 发送ajax请求\r\n                  var url=\"delitems\";\r\n                  var obj={id:id};\r\n                  this.axios.get(url,{params:obj}).then(res=>{//获取服务器返回数据\r\n                  //  判断删除多个商品是否成功\r\n                      if(res.data.code==-1){\r\n                          this.$toast(\"删除失败\");\r\n                      }else{\r\n                          this.$toast(\"删除成功\");\r\n                          this.loadMore();\r\n                      }\r\n                  })\r\n              })\r\n         },\r\n                   \r\n\r\n\r\n\r\n\r\n\r\n\r\n        deleteitem(event){\r\n//功能:用户点击删除按钮完成删除指定商品任务\r\n//(1)为按钮绑定点击事件调用deleteItem \r\n//(2)显示确认框如果用户选 确定\r\nthis.$messagebox.confirm(\"是否删除指定数据\").then(res=>{\r\n//(3)将当前商品id传递函数\r\nvar id = event.target.dataset.id;\r\nconsole.log(id)\r\n//(4)发送ajax请示完成删除任务\r\nvar url=\"delitem\";\r\nvar obj={id:id};\r\nthis.axios.get(url,{\r\nparams:obj\r\n}).then(res=>{\r\n  if(res.data.code=1){\r\nthis.$toast(\"删除成功\");\r\nthis.loadMore();//刷新\r\n  }else{\r\n      this.$toast(\"删除失败\");\r\n  }\r\n}) \r\n//\r\n//(5)删除成功 提示\"删除成功\"\r\n}).catch(err=>{\r\n\r\n})\r\n},\r\n    \r\n\r\n\r\n     loadMore(){\r\n         var url=\"carts\";\r\n          //获取当前用户购物车列表\r\n          //创建url请求服务器地址\r\n          //发送ajax请求\r\n          this.axios.get(url).then(res=>{\r\n              if(res.data.code==-1){\r\n                  this.$messagebox(\"消息\",\"请登录\").then(res=>{\r\n                      this.$router.push(\"/login\")\r\n                  })\r\n              }else{\r\n                 //获取服务器返回数据\r\n                 //this.list=res.data.data;\r\n                   var rows=res.data.data;\r\n                   for(var item of rows){\r\n                       item.cb=true;\r\n                   }\r\n                   this.list=rows;\r\n              }\r\n          })\r\n          //获取服务器返回数据\r\n          //如果服务器返回 请登录\r\n       }\r\n     }\r\n}\r\n</script>\r\n<style>\r\n.cart-item{\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    border-bottom:1px solid #ccc;\r\n    margin-top:25px;\r\n}\r\n.lefttext{\r\n    display:flex;\r\n    align-items:center;\r\n}\r\n.lname{\r\n    margin-left:25x;\r\n}\r\n.price{\r\n    margin-left:25px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}